  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  app:
    build: .
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
  celery_worker:
    build: .
    command: celery -A tasks.celery_app worker --loglevel=info
    depends_on:
      - app
      - redis
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

   redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_config:celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
